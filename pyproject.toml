[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grouper"
requires-python = ">=3.11"
dynamic = ["dependencies", "optional-dependencies", "version"]

[tool.setuptools]
packages = ["grouper"]

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}
optional-dependencies.dev = {file = "requirements-dev.txt"}
optional-dependencies.script = {file = "requirements-script.txt"}
version = {attr = "grouper.__version__"}

# [tool.pytest.ini_options]
# env = [
#     "DEPLOY_ENV=pytest.env",
#     "GROUPER_USER=your username",
#     "GROUPER_PWD=your password",
#     "GROUPER_URI=https://grouper/grouper-ws/servicesRest/v2_4_000",
#     "GROUPER_STEM=test:stem",
#     "AD_USER=domain\\username", #must be in this format, with the username prepended with "ad\\" (yes, two slashes)
#     "AD_PWD=password",
#     "AD_HOST=dc.domain",
#     "AD_DN_BASE=OU=Units,DC=domain",
#     "SQLALCHEMY_DATABASE_URL=sqlite://",
#     'GOOGLE_SERVICES=["itac-test.iam.gserviceaccount.com"]',
#     'CLIENT_IDS=["client_id"]'
# ]

# testpaths = ["tests"]
# addopts = "--cov itac_api --cov-branch --cov-report=term-missing"

[tool.pylama]
linters = "pycodestyle,pyflakes"
skip = ".venv*/*,migrations/*,venv*/*,junk/*"
max_line_length = 88
ignore = "D301"

[tool.pylama.linter.pydocstyle]
convention = "pep257"

[tool.pylama.linter.pylint]
load_plugins = "pylint.extensions.docparams,pylint.extensions.docstyle"
disable = "all"
enable = "parameter_documentation,docstyle"

accept_no_param_doc = false
accept_no_raise_doc = false
accept_no_return_doc = false
accept_no_yields_doc = false

# [[tool.pylama.files]]
# # Only run these additional linters against the app directory
# # This might need to be more targeted, but this at least shows how
# # filtering can be done to apply different linters to different
# # parts of the code
# #
# # Test functions don't need docstrings, so don't check for them there.
# path = "itac_api/*"
# linters = "pycodestyle,pyflakes,pydocstyle,pylint"

[tool.mypy]
# --strict (as of 0.990)
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
strict_concatenate = true
# --strict end
# plugins = ["pydantic.mypy"]
